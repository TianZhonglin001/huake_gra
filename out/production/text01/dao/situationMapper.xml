<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="dao.situationMapper" >
  <resultMap id="BaseResultMap" type="bean.situation" >
    <id column="sno" property="sno" jdbcType="VARCHAR" />
    <result column="sname" property="sname" jdbcType="VARCHAR" />
    <result column="smajor" property="smajor" jdbcType="VARCHAR" />
    <result column="schoose" property="schoose" jdbcType="INTEGER" />
    <result column="scompany" property="scompany" jdbcType="VARCHAR" />
    <result column="scompany_owner" property="scompanyOwner" jdbcType="VARCHAR" />
    <result column="slink" property="slink" jdbcType="VARCHAR" />
    <result column="sjob" property="sjob" jdbcType="VARCHAR" />
    <result column="sright" property="sright" jdbcType="INTEGER" />
    <result column="stag" property="stag" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    sno, sname, smajor, schoose, scompany, scompany_owner, slink, sjob, sright, stag
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="bean.situationExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from situation
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from situation
    where sno = #{sno,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from situation
    where sno = #{sno,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="bean.situationExample" >
    delete from situation
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="bean.situation" >
    insert into situation (sno, sname, smajor, 
      schoose, scompany, scompany_owner, 
      slink, sjob, sright, 
      stag)
    values (#{sno,jdbcType=VARCHAR}, #{sname,jdbcType=VARCHAR}, #{smajor,jdbcType=VARCHAR}, 
      #{schoose,jdbcType=INTEGER}, #{scompany,jdbcType=VARCHAR}, #{scompanyOwner,jdbcType=VARCHAR}, 
      #{slink,jdbcType=VARCHAR}, #{sjob,jdbcType=VARCHAR}, #{sright,jdbcType=INTEGER}, 
      #{stag,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="bean.situation" >
    insert into situation
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="sno != null" >
        sno,
      </if>
      <if test="sname != null" >
        sname,
      </if>
      <if test="smajor != null" >
        smajor,
      </if>
      <if test="schoose != null" >
        schoose,
      </if>
      <if test="scompany != null" >
        scompany,
      </if>
      <if test="scompanyOwner != null" >
        scompany_owner,
      </if>
      <if test="slink != null" >
        slink,
      </if>
      <if test="sjob != null" >
        sjob,
      </if>
      <if test="sright != null" >
        sright,
      </if>
      <if test="stag != null" >
        stag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="sno != null" >
        #{sno,jdbcType=VARCHAR},
      </if>
      <if test="sname != null" >
        #{sname,jdbcType=VARCHAR},
      </if>
      <if test="smajor != null" >
        #{smajor,jdbcType=VARCHAR},
      </if>
      <if test="schoose != null" >
        #{schoose,jdbcType=INTEGER},
      </if>
      <if test="scompany != null" >
        #{scompany,jdbcType=VARCHAR},
      </if>
      <if test="scompanyOwner != null" >
        #{scompanyOwner,jdbcType=VARCHAR},
      </if>
      <if test="slink != null" >
        #{slink,jdbcType=VARCHAR},
      </if>
      <if test="sjob != null" >
        #{sjob,jdbcType=VARCHAR},
      </if>
      <if test="sright != null" >
        #{sright,jdbcType=INTEGER},
      </if>
      <if test="stag != null" >
        #{stag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="bean.situationExample" resultType="java.lang.Integer" >
    select count(*) from situation
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update situation
    <set >
      <if test="record.sno != null" >
        sno = #{record.sno,jdbcType=VARCHAR},
      </if>
      <if test="record.sname != null" >
        sname = #{record.sname,jdbcType=VARCHAR},
      </if>
      <if test="record.smajor != null" >
        smajor = #{record.smajor,jdbcType=VARCHAR},
      </if>
      <if test="record.schoose != null" >
        schoose = #{record.schoose,jdbcType=INTEGER},
      </if>
      <if test="record.scompany != null" >
        scompany = #{record.scompany,jdbcType=VARCHAR},
      </if>
      <if test="record.scompanyOwner != null" >
        scompany_owner = #{record.scompanyOwner,jdbcType=VARCHAR},
      </if>
      <if test="record.slink != null" >
        slink = #{record.slink,jdbcType=VARCHAR},
      </if>
      <if test="record.sjob != null" >
        sjob = #{record.sjob,jdbcType=VARCHAR},
      </if>
      <if test="record.sright != null" >
        sright = #{record.sright,jdbcType=INTEGER},
      </if>
      <if test="record.stag != null" >
        stag = #{record.stag,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update situation
    set sno = #{record.sno,jdbcType=VARCHAR},
      sname = #{record.sname,jdbcType=VARCHAR},
      smajor = #{record.smajor,jdbcType=VARCHAR},
      schoose = #{record.schoose,jdbcType=INTEGER},
      scompany = #{record.scompany,jdbcType=VARCHAR},
      scompany_owner = #{record.scompanyOwner,jdbcType=VARCHAR},
      slink = #{record.slink,jdbcType=VARCHAR},
      sjob = #{record.sjob,jdbcType=VARCHAR},
      sright = #{record.sright,jdbcType=INTEGER},
      stag = #{record.stag,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="bean.situation" >
    update situation
    <set >
      <if test="sname != null" >
        sname = #{sname,jdbcType=VARCHAR},
      </if>
      <if test="smajor != null" >
        smajor = #{smajor,jdbcType=VARCHAR},
      </if>
      <if test="schoose != null" >
        schoose = #{schoose,jdbcType=INTEGER},
      </if>
      <if test="scompany != null" >
        scompany = #{scompany,jdbcType=VARCHAR},
      </if>
      <if test="scompanyOwner != null" >
        scompany_owner = #{scompanyOwner,jdbcType=VARCHAR},
      </if>
      <if test="slink != null" >
        slink = #{slink,jdbcType=VARCHAR},
      </if>
      <if test="sjob != null" >
        sjob = #{sjob,jdbcType=VARCHAR},
      </if>
      <if test="sright != null" >
        sright = #{sright,jdbcType=INTEGER},
      </if>
      <if test="stag != null" >
        stag = #{stag,jdbcType=INTEGER},
      </if>
    </set>
    where sno = #{sno,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="bean.situation" >
    update situation
    set sname = #{sname,jdbcType=VARCHAR},
      smajor = #{smajor,jdbcType=VARCHAR},
      schoose = #{schoose,jdbcType=INTEGER},
      scompany = #{scompany,jdbcType=VARCHAR},
      scompany_owner = #{scompanyOwner,jdbcType=VARCHAR},
      slink = #{slink,jdbcType=VARCHAR},
      sjob = #{sjob,jdbcType=VARCHAR},
      sright = #{sright,jdbcType=INTEGER},
      stag = #{stag,jdbcType=INTEGER}
    where sno = #{sno,jdbcType=VARCHAR}
  </update>
</mapper>